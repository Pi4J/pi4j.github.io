<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Choosing an I/O Provider on Pi4J</title><link>https://pi4j.com/documentation/providers/</link><description>Recent content in Choosing an I/O Provider on Pi4J</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://pi4j.com/documentation/providers/index.xml" rel="self" type="application/rss+xml"/><item><title>GpioD Provider</title><link>https://pi4j.com/documentation/providers/gpiod/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/documentation/providers/gpiod/</guid><description>The GpioD plugin provider was added in Pi4J 2.5.0 to be able to support the Raspberry Pi 5 with the new GPIO chip RP1.
Providers in the GpioD plugin:
gpiod-digital-input gpiod-digital-output The GpioD provider requires minimum kernel Bullseye 6.1.21 and Bookworm 6.6.22 !
If you get an error at startup with the following content, your OS is outdated for the GpioD implementation used in Pi4J:
UNDERLYING EXCEPTION: [java.</description></item><item><title>LinuxFS Provider</title><link>https://pi4j.com/documentation/providers/linuxfs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/documentation/providers/linuxfs/</guid><description>The current implementation of the LinuxFS plugin implements a file based I2C and PWM provider. The file based I2C provider opens /dev/i2c-1 using a RandomAccessFile to perform I2C reads and writes. The file based PWM provider opens /sys/class/pwm/pwmchip? using a RandomAccessFile to perform PWM operations.
The Linuxfs provider linuxfs-pwm requires minimum kernel Bullseye 6.1.21 and Bookworm 6.6.22 !
Providers in the LinuxFS plugin:
linuxfs-i2c linuxfs-pwm Under construction linuxfs-digital-input linuxfs-digital-output To use the LinuxFS provider include the following dependencies:</description></item><item><title>PiGpio Provider</title><link>https://pi4j.com/documentation/providers/pigpio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/documentation/providers/pigpio/</guid><description>The current implementation of the PiGpio exposes the GPIO functions available on the Raspberry Pi.
Providers in the PiGpio plugin:
pigpio-digital-input pigpio-digital-output pigpio-pwm pigpio-i2c pigpio-spi pigpio-serial Applications which use the PiGpio Provider, need to be started with sudo to be able to interface with the GPIOs.
When you don&amp;rsquo;t use sudo, you&amp;rsquo;ll see an error like this:
WARN com.pi4j.library.pigpio.impl.PiGpioNativeImpl - PIGPIO ERROR: PI_INIT_FAILED; pigpio initialisation failed To use the PiGpio provider include the following dependencies:</description></item></channel></rss>
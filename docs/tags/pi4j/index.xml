<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pi4J</title><link>https://pi4j.com/tags/pi4j/</link><description>Recent content on Pi4J</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 25 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://pi4j.com/tags/pi4j/index.xml" rel="self" type="application/rss+xml"/><item><title>Interview Tom Aarts</title><link>https://pi4j.com/blog/2024/20240425_interview_tom_aarts/</link><pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate><guid>https://pi4j.com/blog/2024/20240425_interview_tom_aarts/</guid><description>2024-04-25, by Frank Delporte
Tom Aarts starting contributing to the Pi4J project when he did his first commit in the pi4j-example-devices repository. At this moment, you can find example implementations for a long list of devices (see screenshot below), using V2 of Pi4J. While creating these implementations he found and fixed some missing pieces and bugs in the core library. See, for instance, this blog post about the ongoing PWM improvements for the Raspberry Pi 5.</description></item><item><title>Interview Robert von Burg</title><link>https://pi4j.com/blog/2024/20240419_interview_robert_von_burg/</link><pubDate>Fri, 19 Apr 2024 00:00:00 +0000</pubDate><guid>https://pi4j.com/blog/2024/20240419_interview_robert_von_burg/</guid><description>2024-04-19, by Frank Delporte
The Pi4J project has two important Roberts. The first one is Robert Savage (living in the US), who started the Pi4J development. You can read more about him and the reason Pi4J was created in this interview on Foojay. He also created V2 of Pi4J, but hasn&amp;rsquo;t been involved a lot in the project since its release. Luckily, we have another Robert in the Pi4J team! Robert von Burg (living in Switzerland), also known as Eitch, is the main maintainer now of the Pi4J V2 sources and takes care of the releases.</description></item><item><title>Ongoing I2C Improvements</title><link>https://pi4j.com/blog/2024/20240418_i2c_improvements/</link><pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate><guid>https://pi4j.com/blog/2024/20240418_i2c_improvements/</guid><description>2024-04-17, by Frank Delporte
Robert von Burg is working on improvements of the I2C implementation in Pi4J in preparation for the next release. The changes are in pull request #351. It&amp;rsquo;s still work-in-progress but will bring these improvements:
New I2C.execute(Callable) method to allow to atomically execute multiple I2C calls in a thread in a safe way. New I2C.writeRead(byte[], byte[]) method to atomically perform a write, immediately followed by a read on the I2C bus.</description></item><item><title>LED Matrix with SPI MAX7219</title><link>https://pi4j.com/blog/2024/20240417_led_matrix_max7219_spi_web/</link><pubDate>Wed, 17 Apr 2024 00:00:00 +0000</pubDate><guid>https://pi4j.com/blog/2024/20240417_led_matrix_max7219_spi_web/</guid><description>2024-04-18, by Frank Delporte
Roberto Marquez shared a project with us that uses Java to interface with a MAX7219 SPI device to control an LED matrix. It&amp;rsquo;s inspired by the blog Raspberry Pi and SPI 8Ã—8 LED matrix example with Java and Pi4j, but differs in that it is Web-enabled via Spring Boot. This project is the starting point to create a weather station in combination with the BMP280, see BME280 Sensor (temp, humidity, pressure) via Pi4J, I2C, and JBang.</description></item><item><title>Alexander Liggesmeyer and RPi5</title><link>https://pi4j.com/blog/2024/20240318_interview_alexander_liggesmeyer/</link><pubDate>Mon, 18 Mar 2024 00:00:00 +0000</pubDate><guid>https://pi4j.com/blog/2024/20240318_interview_alexander_liggesmeyer/</guid><description>2024-03-18, by Frank Delporte
Interview with Alexander Liggesmeyer about Pi4J for Raspberry Pi 5 Today, version 2.5.0 of Pi4J got released with many changes, fixes and improvements. The most important one being support for the Raspberry Pi 5. Short after the release of this new board, several issues were raised on GitHub as Pi4J was not compatible. The Raspberry Pi 5 uses a completely new way to interact with the GPIOs: the RP1 chip.</description></item></channel></rss>
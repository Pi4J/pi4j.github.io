<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SPI on Pi4J</title><link>https://pi4j.com/tags/spi/</link><description>Recent content in SPI on Pi4J</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 17 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://pi4j.com/tags/spi/index.xml" rel="self" type="application/rss+xml"/><item><title>8x8 LED Matrix</title><link>https://pi4j.com/examples/jbang/jbang_pi4j_spi_led_matrix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/examples/jbang/jbang_pi4j_spi_led_matrix/</guid><description>Controlling a 8x8 LED Matrix with MAX7219 via SPI GITHUB PROJECT: github.com/Pi4J/pi4j-jbang &amp;gt; Pi4JLedMatrixSpi.java
This example is explained in the following video:
Intro Before proceeding with this example, make sure that you have a Raspberry Pi prepared to execute Java code with JBang as explained here.
Wiring SPI requires four connections, but as we don&amp;rsquo;t read data back, we only connect three of them plus power and ground.</description></item><item><title>Serial Peripheral Interface (SPI)</title><link>https://pi4j.com/documentation/io-examples/spi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/documentation/io-examples/spi/</guid><description>What is it? The Serial Peripheral Interface, abbreviated to SPI, is a bus system which enables communication between a main device (called “master”) and one or more secondary devices (called “slave”). A direct communication between all participants is not possible here, much more the master can choose at any time with which slave he would like to exchange data.
In order to address only one slave, a total of 3 signal lines are required, two of which are used for bidirectional data transmission and one as a clock generator for serial transmission.</description></item><item><title>Java Controlled LED Matrix via a MAX7219 SPI Controller</title><link>https://pi4j.com/blog/2024/20240417_led_matrix_max7219_spi_web/</link><pubDate>Wed, 17 Apr 2024 00:00:00 +0000</pubDate><guid>https://pi4j.com/blog/2024/20240417_led_matrix_max7219_spi_web/</guid><description>2024-04-17, by Frank Delporte
Roberto Marquez shared a project with us that uses Java to interface with a MAX7219 SPI device to control an LED matrix. It&amp;rsquo;s inspired by the blog &amp;ldquo;Raspberry Pi and SPI 8×8 LED matrix example with Java and Pi4j&amp;rdquo;, but differs in that it is Web-enabled via Spring Boot. This project is the starting point to create a weather station in combination with the BMP280, see &amp;ldquo;BME280 Sensor (temp, humidity, pressure) via Pi4J, I2C, and JBang&amp;rdquo;.</description></item></channel></rss>
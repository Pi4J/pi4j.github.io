<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LED Strip on Pi4J</title><link>https://pi4j.com/tags/led-strip/</link><description>Recent content in LED Strip on Pi4J</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://pi4j.com/tags/led-strip/index.xml" rel="self" type="application/rss+xml"/><item><title>Pixelblaze Output Expander</title><link>https://pi4j.com/examples/jbang/pixelblaze_output_expander/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/examples/jbang/pixelblaze_output_expander/</guid><description>GITHUB PROJECT: github.com/Pi4J/pi4j-jbang &amp;gt; PixelblazeOutputExpander.java
One of the most &amp;ldquo;fancy&amp;rdquo; electronic components is definitely a LED strip. It&amp;rsquo;s really cool to control a long strip of lights with only a few lines of code&amp;hellip; But, there is a problem. The timing of the signals is crucial to reliably control these strips. Both Python and Java on a Raspberry Pi can struggle with these timings as they are running on Linux, a non-real-time operating system.</description></item><item><title>Controlling a LED Matrix</title><link>https://pi4j.com/examples/jbang/pixelblaze_output_expander_image/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/examples/jbang/pixelblaze_output_expander_image/</guid><description>GITHUB PROJECT: github.com/Pi4J/pi4j-jbang &amp;gt; PixelblazeOutputExpanderImageMatrix.java
A LED strip doesn&amp;rsquo;t only exist as a single strip, the same system is also used in a LED matrix. In this example, we will control such a 8*32 LED matrix.
Intro This example is based on the Pixelblaze Output Expander (PBOE) JBang example. Make sure to check out the PBOE example, so you fully understand how to set up and use JBang, and connect and control a LED strip via a PBOE.</description></item><item><title>LED strip with a JavaFX UI</title><link>https://pi4j.com/examples/jbang/pixelblaze_output_expander_javafx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/examples/jbang/pixelblaze_output_expander_javafx/</guid><description>GITHUB PROJECT: github.com/Pi4J/pi4j-jbang &amp;gt; PixelblazeOutputExpanderJavaFX.java
We already know how to control a LED strip, so let&amp;rsquo;s add a JavaFX User Interface to control the colors on each of the LEDs on the strip.
Demo of the JavaFX UI
Intro This example is based on the Pixelblaze Output Expander (PBOE) JBang example.</description></item><item><title>LED Strip</title><link>https://pi4j.com/examples/components/ledstrip/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/examples/components/ledstrip/</guid><description>Description The LedStrip is a template class, that you can use in your own Java-project. You can take a LED Strip with the WS28xx-chip set.
The Template Class gives you the option to set the LED&amp;rsquo;s of the strip to a desired RGB-Color. If you have many strips, you can use the LEDMatrix
Make sure to check if SPI is enabled in your RaspberryPI. Check the SPI Address. Default is &amp;ldquo;SPI0 MOSI&amp;rdquo; Pin (#19).</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Game development with FXGL on Pi4J</title><link>https://pi4j.com/getting-started/fxgl/</link><description>Recent content in Game development with FXGL on Pi4J</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://pi4j.com/getting-started/fxgl/index.xml" rel="self" type="application/rss+xml"/><item><title>FXGl to Picade</title><link>https://pi4j.com/getting-started/fxgl/fxgl-to-picade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/getting-started/fxgl/fxgl-to-picade/</guid><description>&lt;div class="notices tip" >&lt;p>GITHUB PROJECT: &lt;a href="https://github.com/Pi4J/pi4j-example-fxgl" target="_blank" rel="noopener">https://github.com/Pi4J/pi4j-example-fxgl&lt;/a>&lt;/p>
&lt;/div>

&lt;p>In this section we demonstrate how to convert existing FXGL projects to work on a RaspberryPi&lt;/p>
&lt;p>If you don&amp;rsquo;t have an existing FXGL project, go grab one from &lt;a href="https://github.com/AlmasB/FXGLGames" target="_blank" rel="noopener">FXGLGames&lt;/a>&lt;/p>
&lt;h2 id="steps-to-get-your-app-running-on-a-raspberrypi">Steps to get your app running on a RaspberryPi&lt;/h2>
&lt;ul>
&lt;li>Add Maven support to your project
In our project we use &lt;a href="https://maven.apache.org/what-is-maven.html" target="_blank" rel="noopener">Maven&lt;/a> to manage dependencies and build the application, other build tools such as gradle
are also viable but not covered in this tutorial.&lt;/li>
&lt;/ul>
&lt;p>In the Project tool window, right-click your project and select Add Framework Support
&lt;img src="https://pi4j.com/assets/getting-started/fxgl/project_tool_window_maven.png?height=300px" alt="project-tool-window">&lt;/p></description></item><item><title>JavaFX kiosk mode</title><link>https://pi4j.com/getting-started/fxgl/kiosk-mode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/getting-started/fxgl/kiosk-mode/</guid><description>&lt;div class="notices tip" >&lt;p>Visit &lt;a href="https://webtechie.be/post/2021-04-23-javafx-kiosk-raspberry-pi/" target="_blank" rel="noopener">webtechie.be&lt;/a> for the full blogpost&lt;/p>
&lt;/div>

&lt;h2 id="kiosk-mode">Kiosk Mode&lt;/h2>
&lt;p>With Gluon&amp;rsquo;s JavaFX 17-ea, we are able to run applications in different modes: Desktop and Kiosk mode.
In this post we focus on the Kiosk mode only.&lt;/p>
&lt;p>With this approach, the application is the only thing you see on the screen. This prevents the user to open any other applications, or mess up your system.
In this case, there is no need for a window manager, and the application directly uses the underlying (hardware) framebuffer.
To achieve this, we use &lt;strong>Monocle with EGL and DRM&lt;/strong>, as that is the Linux approach to directly address the hardware acceleration, without a window manager.
The JavaFX application is using Direct Rendering Mode (DRM) to be visualized. An extra benefit is the performance boost, as your program is the only thing that needs to be handled towards the screen.&lt;/p></description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting Started With Pi4J on Pi4J</title><link>https://pi4j.com/getting-started/</link><description>Recent content in Getting Started With Pi4J on Pi4J</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://pi4j.com/getting-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Understanding the GPIO pins</title><link>https://pi4j.com/getting-started/understanding-the-pins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/getting-started/understanding-the-pins/</guid><description>&lt;p&gt;Connecting electronic components to the Pi is done via one or more of the pins in the so-called header. The number of
pins has &amp;ldquo;grown&amp;rdquo; between the different Raspberry Pi board versions, but all recent ones have a 40-pin header. It&amp;rsquo;s of
course important to be aware of the correct numbering to not connect components the wrong way.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://pi4j.com/assets/getting-started/pins/headernumber-on-board.jpg" alt="Numbering of the pins"&gt;&lt;/p&gt;
&lt;h2 id="type-of-pins"&gt;Type of Pins&lt;/h2&gt;
&lt;p&gt;The pins have different uses&lt;/p&gt;</description></item><item><title>Electrical Engineering</title><link>https://pi4j.com/getting-started/electrical-engineering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/getting-started/electrical-engineering/</guid><description>&lt;p&gt;The goal of the Pi4J project is to combine sofware (Java) with hardware (electronic components). On this page we give you some tips and tricks for the electronics part.&lt;/p&gt;
&lt;h2 id="breadboard"&gt;Breadboard&lt;/h2&gt;
&lt;p&gt;A breadboard is the basic for each experiment. It allows you to easily connect several components to each other and the Raspberry Pi. Here is a video that explains the basics of breadboards:&lt;/p&gt;
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;"&gt;
 &lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/6WReFkfrUIk?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"&gt;&lt;/iframe&gt;
 &lt;/div&gt;

&lt;p&gt;


&lt;div class="gallery caption-position-bottom caption-effect-slide hover-effect-zoom hover-transition" itemscope itemtype="http://schema.org/ImageGallery"&gt;
	 

&lt;link rel="stylesheet" href="https://pi4j.com/css/hugo-easy-gallery.css" /&gt;
&lt;div class="box fancy-figure caption-position-center caption-effect-fade" &gt;
 &lt;figure itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject"&gt;
 &lt;div class="img" style="background-image: url('/assets/getting-started/electricalEngineering/breadboard.jpeg');"&gt;
 &lt;img itemprop="thumbnail" src="https://pi4j.com/assets/getting-started/electricalEngineering/breadboard.jpeg" alt="Breadboard"/&gt;
 &lt;/div&gt;
 &lt;a href="https://pi4j.com/assets/getting-started/electricalEngineering/breadboard.jpeg" itemprop="contentUrl"&gt;&lt;/a&gt;
 &lt;figcaption&gt;
 &lt;p&gt;Breadboard&lt;/p&gt;</description></item><item><title>Java development with VSC</title><link>https://pi4j.com/getting-started/java-development-on-the-raspberry-pi-with-vsc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/getting-started/java-development-on-the-raspberry-pi-with-vsc/</guid><description>&lt;h2 id="java-on-the-raspberry-pi"&gt;Java on the Raspberry Pi&lt;/h2&gt;
&lt;p&gt;You need Java 21 or newer to use Pi4J V3+. Please check the &lt;a href="https://pi4j.com/prepare/install-java/"&gt;Prepare a Raspberry Pi&lt;/a&gt; and &lt;a href="https://pi4j.com/prepare/install-java/"&gt;Install Java and Tools&lt;/a&gt; instructions. On a board with ARMv7 or ARMv8 you will get this result:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ java -version
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;openjdk version &lt;span style="color:#e6db74"&gt;&amp;#34;21.0.5&amp;#34;&lt;/span&gt; 2024-10-15 LTS
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;OpenJDK Runtime Environment Zulu21.38+21-CA &lt;span style="color:#f92672"&gt;(&lt;/span&gt;build 21.0.5+11-LTS&lt;span style="color:#f92672"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;OpenJDK 64-Bit Server VM Zulu21.38+21-CA &lt;span style="color:#f92672"&gt;(&lt;/span&gt;build 21.0.5+11-LTS, mixed mode, sharing&lt;span style="color:#f92672"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Keep in mind this version is &lt;strong&gt;only compatible with ARMv7 or higher&lt;/strong&gt; and doesn&amp;rsquo;t support all
Raspberry Pi board versions. If you have a Raspberry Pi A (version 3), B (version 2 or higher),
or Compute (version 3 or higher), you are good to go! For all other boards, or if you get the error below, you will need some additional steps
that are described on &lt;a href="https://pi4j.com/documentation/java-installation/"&gt;Java for ARMv6/7/8&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Developing on a remote PC</title><link>https://pi4j.com/getting-started/developing-on-a-remote-pc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/getting-started/developing-on-a-remote-pc/</guid><description>&lt;div class="notices tip" &gt;&lt;p&gt;GITHUB PROJECT: &lt;a href="https://github.com/Pi4J/pi4j-maven-archetype" target="_blank" rel="noopener"&gt;https://github.com/Pi4J/pi4j-maven-archetype&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id="developing-java-programs-using-a-remote-pc-workstation"&gt;Developing Java Programs Using a Remote PC Workstation&lt;/h2&gt;
&lt;p&gt;Writing your Java program, compiling and running it directly on the Raspberry Pi board
as shown in the previous chapter is perfectly fine, of course,
but there is an alternative way to arrange your developing laboratory, using a normal
desktop computer as Remote Developing Workstation (RDW).&lt;/p&gt;
&lt;p&gt;This &lt;a href="https://github.com/Pi4J/pi4j-maven-archetype" title="raspimaven-archetype" target="_blank" rel="noopener"&gt;Maven Archetype&lt;/a&gt; will give you
a tool to generate Pi4J V2+ skeleton Java projects. You can use it for your next Pi4j project and you will be able
to develop your program on the remote workstation (RDW), compile them, transmit the executable
code on the target Pi board and run it. You can also start a remote debugging session.&lt;/p&gt;</description></item><item><title>Minimal example application</title><link>https://pi4j.com/getting-started/minimal-example-application/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/getting-started/minimal-example-application/</guid><description>&lt;div class="notices tip" &gt;&lt;p&gt;GITHUB PROJECT: &lt;a href="https://github.com/Pi4J/pi4j-example-minimal" target="_blank" rel="noopener"&gt;https://github.com/Pi4J/pi4j-example-minimal&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;In the &lt;a href="https://github.com/Pi4J/pi4j-example-minimal" target="_blank" rel="noopener"&gt;&amp;ldquo;pi4j-example-minimal&amp;rdquo; GitHub project&lt;/a&gt; you can
find a project which contains the minimal code to control a digital input and output with Pi4J. The project is further
described on this page. The application will toggle an LED on/off and each time you press the button, the toggling
speed increases. When you have pushed the button 5 times, the application stops.&lt;/p&gt;

 &lt;div
 style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;"&gt;
 &lt;iframe
 src="https://player.vimeo.com/video/525570174?dnt=0"
 style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allow="fullscreen"&gt;
 &lt;/iframe&gt;
 &lt;/div&gt;

&lt;h2 id="wiring"&gt;Wiring&lt;/h2&gt;
&lt;p&gt;This minimal example application uses this wiring:&lt;/p&gt;</description></item><item><title>Minimal example as FAT JAR</title><link>https://pi4j.com/getting-started/minimal-example-application-fatjar/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/getting-started/minimal-example-application-fatjar/</guid><description>&lt;div class="notices tip" &gt;&lt;p&gt;GITHUB PROJECT: &lt;a href="https://github.com/Pi4J/pi4j-example-fatjar" target="_blank" rel="noopener"&gt;https://github.com/Pi4J/pi4j-example-fatjar&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;a href="https://pi4j.com/getting-started/minimal-example-application/"&gt;&amp;ldquo;Minimal example application&amp;rdquo;&lt;/a&gt; uses one LED and button to demonstrate
the basic use of Pi4J. When building that project with Maven, all the required Java modules are copied to the
&lt;code&gt;target/distribution&lt;/code&gt; directory. But a lot of developers like to produce a single, executable JAR that contains
all dependencies, also known as a &amp;ldquo;FAT JAR&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;The repository &lt;a href="https://github.com/Pi4J/pi4j-example-fatjar" target="_blank" rel="noopener"&gt;&amp;ldquo;pi4j-example-fatjar&amp;rdquo; GitHub project&lt;/a&gt; contains a Maven project
with identical wiring, dependencies and build command to the &amp;ldquo;Minimal example application&amp;rdquo;, but results in such a FAT JAR
instead of separate Java modules.&lt;/p&gt;</description></item><item><title>User interface with JavaFX</title><link>https://pi4j.com/getting-started/user-interface-with-javafx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/getting-started/user-interface-with-javafx/</guid><description>&lt;div class="notices tip" &gt;&lt;p&gt;GITHUB PROJECT: &lt;a href="https://github.com/Pi4J/pi4j-example-javafx" target="_blank" rel="noopener"&gt;https://github.com/Pi4J/pi4j-example-javafx&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;JavaFX is a framework to create user interfaces for desktop (Windows, Mac, Linux) and mobile phones. JavaFX is
an opensource project which is documented on &lt;a href="https://openjfx.io/" target="_blank" rel="noopener"&gt;openjfx.io&lt;/a&gt; and the sources are available
in &lt;a href="https://github.com/openjdk/jfx" target="_blank" rel="noopener"&gt;this GitHub project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The main goal of Java has always been to be able to create applications which are &lt;strong&gt;&amp;ldquo;write once, run everywhere&amp;rdquo;&lt;/strong&gt;.
JavaFX promises the same for Graphical User Interface applications.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gluonhq.com/" target="_blank" rel="noopener"&gt;Gluon&lt;/a&gt; is the main maintainer of the OpenJFX project and offers commercial support to
companies who want to use JavaFX in critical applications. They also provide &lt;a href="https://gluonhq.com/products/" target="_blank" rel="noopener"&gt;tools to build and compile Java
code to native applications for all platforms&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>JavaFX GUI and MVC template</title><link>https://pi4j.com/getting-started/javafx-mvc-template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/getting-started/javafx-mvc-template/</guid><description>&lt;div class="notices tip" &gt;&lt;p&gt;GITHUB PROJECT: &lt;a href="https://github.com/Pi4J/pi4j-template-javafx" target="_blank" rel="noopener"&gt;https://github.com/Pi4J/pi4j-template-javafx&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;a href="https://www.fhnw.ch" target="_blank" rel="noopener"&gt;FHNW University&lt;/a&gt; created a template project which is now part of the Pi4J example repositories.&lt;/p&gt;
&lt;p&gt;The goal of this project is to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Provide a clear step-by-step how to prepare your Raspberry Pi&lt;/li&gt;
&lt;li&gt;Provide multiple test and start applications&lt;/li&gt;
&lt;li&gt;Explain the use of a MVC-model (Model-View-Controller) to clearly split data, actions and user interface&lt;/li&gt;
&lt;li&gt;Explain the use of JUnit test&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="sources-and-info"&gt;Sources and Info&lt;/h2&gt;
&lt;p&gt;Please check the README of the sources of the project for a full description of the setup process of the Raspberry Pi
and to fully understand the example applications and the MVC-model. This page is only intended to give you a quick overview.&lt;/p&gt;</description></item><item><title>Learn more...</title><link>https://pi4j.com/getting-started/learn-more/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/getting-started/learn-more/</guid><description>&lt;p&gt;Pi4J is used in a lot of projects, and you can find a lot of examples online. On this page we want to keep an
up-to-date list. Do you want to add something? Please hit &amp;ldquo;Edit this page&amp;rdquo; on the top and
create a pull request!&lt;/p&gt;
&lt;h2 id="twitter"&gt;Twitter&lt;/h2&gt;
&lt;p&gt;Please share your personal or professional projects where you combine Java and the Raspberry Pi
&lt;a href="https://twitter.com/search?q=javaonraspberrypi&amp;amp;src=typed_query&amp;amp;f=live" target="_blank" rel="noopener"&gt;on Twitter with the hashtag #JavaOnRaspberryPi&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="online-articles"&gt;Online Articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Foojay.io is a place for friends of OpenJDK, providing articles, updated analyses, selected highlights, and
categorized lists on all things Java.
&lt;a href="https://foojay.io/today/category/java/embedded/raspberry-pi/" target="_blank" rel="noopener"&gt;There is also a category of posts dedicated to Java on the Raspberry Pi.&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="books"&gt;Books&lt;/h2&gt;
&lt;h3 id="getting-started-with-java-on-the-raspberry-pi"&gt;Getting Started with Java on the Raspberry Pi&lt;/h3&gt;
&lt;p&gt;This book by &lt;a href="https://twitter.com/frankdelporte" target="_blank" rel="noopener"&gt;Frank Delporte&lt;/a&gt; includes a lot of info and history about Java itself
and how to install it on the Raspberry Pi. Also, a lot of tips and tricks to become or be a better developer.
And above all many simple examples on these and even more other topics:&lt;/p&gt;</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LinuxFS on Pi4J</title><link>https://pi4j.com/tags/linuxfs/</link><description>Recent content in LinuxFS on Pi4J</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 23 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://pi4j.com/tags/linuxfs/index.xml" rel="self" type="application/rss+xml"/><item><title>Choosing an I/O Provider</title><link>https://pi4j.com/documentation/providers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/documentation/providers/</guid><description>&lt;p>Providers are extensible service modules responsible for the concrete implementation of a specific I/O type.
The providers also allow to separate the internal logic of the Pi4J core from the concrete implementation of the board
on which they are used.&lt;/p>
&lt;p>Pi4J 2.0 - 2.4: Multiple providers for the same I/O type can be loaded into a Pi4J context concurrently. For example a
&amp;ldquo;RaspberryPi-DigitalInputProvider&amp;rdquo; and &amp;ldquo;GertBoard-DigitalInputProvider&amp;rdquo; could both be loaded and both providing digital
inputs at the same time.&lt;/p></description></item><item><title>LinuxFS Provider</title><link>https://pi4j.com/documentation/providers/linuxfs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/documentation/providers/linuxfs/</guid><description>&lt;p>The current implementation of the LinuxFS plugin implements a file based I2C and PWM provider. The file based I2C provider opens
&lt;code>/dev/i2c-1&lt;/code> using a &lt;code>RandomAccessFile&lt;/code> to perform I2C reads and writes. The file based PWM provider opens
&lt;code>/sys/class/pwm/pwmchip?&lt;/code> using a &lt;code>RandomAccessFile&lt;/code> to perform PWM operations.&lt;/p>

&lt;div class="notices warning" >&lt;p>The Linuxfs provider linuxfs-pwm requires minimum kernel Bullseye 6.1.21 and Bookworm 6.6.22 !&lt;/p>
&lt;/div>

&lt;p>Providers in the LinuxFS plugin:&lt;/p>
&lt;ul>
&lt;li>linuxfs-i2c&lt;/li>
&lt;li>linuxfs-pwm&lt;/li>
&lt;li>Under construction
&lt;ul>
&lt;li>linuxfs-digital-input&lt;/li>
&lt;li>linuxfs-digital-output&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>To use the LinuxFS provider include the following dependencies:&lt;/p></description></item><item><title>PWM Hardware Support on RPi5</title><link>https://pi4j.com/blog/2024/20240423_pwm_rpi5/</link><pubDate>Tue, 23 Apr 2024 00:00:00 +0000</pubDate><guid>https://pi4j.com/blog/2024/20240423_pwm_rpi5/</guid><description>&lt;p>2024-04-23, by Tom Aarts&lt;/p>
&lt;p>The next version of Pi4J (are now already in 2.5.2-SNAPSHOT) will add PWM support via a new provider &lt;code>linuxfs-pwm&lt;/code>. The previous PWM PiGpio provider does not support the Raspberry Pi 5 RP1 chip. To use this new provider, changes are required in your &lt;code>pom.xml&lt;/code> dependencies and Java code. The details of using this new provider are explained in the Pi4J documentation in &lt;a href="https://pi4j.com/documentation/io-examples/pwm/">Pulse Width Modulation&lt;/a>. In this blog post, I want to provide extra details and an example implementation. This post reference changes when using the Bookworm OS on a Raspberry Pi 5. If you are using the &lt;code>linuxfs-pwm&lt;/code> provider on a Raspberry Pi 4, consult the &lt;a href="https://pi4j.com/documentation/io-examples/pwm/">Pulse Width Modulation&lt;/a> for &lt;code>config.sys&lt;/code> and channel differences.&lt;/p></description></item></channel></rss>
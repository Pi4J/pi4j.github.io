<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Signed on Pi4J</title><link>https://pi4j.com/tags/signed/</link><description>Recent content in Signed on Pi4J</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 25 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://pi4j.com/tags/signed/index.xml" rel="self" type="application/rss+xml"/><item><title>Signed versus unsigned byte values</title><link>https://pi4j.com/blog/2024/20240927-bits-bytes-signed-unsigned/</link><pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate><guid>https://pi4j.com/blog/2024/20240927-bits-bytes-signed-unsigned/</guid><description>&lt;p>2024-09-27, by Frank Delporte&lt;/p>
&lt;p>When using bits and bytes to control electronic components, the conversion from a byte to, e.g., logging output can be a bit confusing as Java uses signed values. This means a byte value has a range of -128 till 127, while you would expect 0 (0x00) till 255 (0xFF).&lt;/p>
&lt;p>For example, the hex value &lt;code>0x8F&lt;/code> (&lt;code>10001111&lt;/code>) is handled like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> b &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">byte&lt;/span>) Integer.&lt;span style="color:#a6e22e">parseInt&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;10001111&amp;#34;&lt;/span>, 2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Byte value 10001111: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> b);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Output&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Byte value 10001111: &lt;span style="color:#f92672">-&lt;/span>113
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can use &lt;code>Byte.toUnsignedInt(b)&lt;/code> to get the expected, unsigned value:&lt;/p></description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>FFM on Pi4J</title><link>https://pi4j.com/tags/ffm/</link><description>Recent content in FFM on Pi4J</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 09 Oct 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://pi4j.com/tags/ffm/index.xml" rel="self" type="application/rss+xml"/><item><title>2025 Devoxx Talk FFM API</title><link>https://pi4j.com/video/20251009-devoxx-ffmapi/</link><pubDate>Thu, 09 Oct 2025 00:00:00 +0000</pubDate><guid>https://pi4j.com/video/20251009-devoxx-ffmapi/</guid><description>&lt;h2 id="the-wait-is-over-foreign-function--memory-ffm-api-brings-modern-java-to-the-raspberry-pi"&gt;The Wait is Over: Foreign Function &amp;amp; Memory FFM API brings modern Java to the Raspberry Pi&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;20251009 - Recording of the talk at Devoxx Belgium by Frank Delporte&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;All the links of the presentation are available &lt;a href="https://webtechie.be/post/2025-10-08-devoxx-talk-ffmapi-on-raspberrypi/" target="_blank" rel="noopener"&gt;on this blog post&lt;/a&gt;.&lt;/p&gt;
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;"&gt;
 &lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/2BcWWWkb8ac?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"&gt;&lt;/iframe&gt;
 &lt;/div&gt;

&lt;p&gt;Since 2012, Pi4J has enabled Java to control electronic components connected to the Raspberry Pi&amp;rsquo;s GPIO pins. However, both Java and the Raspberry Pi have evolved significantly since then. Supporting new hardware has been a challenge, requiring multiple implementations in the Pi4J library with complex code based on the Java Native Interface (JNI) and Java Native Access (JNA).&lt;/p&gt;</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ADC on Pi4J</title><link>https://pi4j.com/tags/adc/</link><description>Recent content in ADC on Pi4J</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://pi4j.com/tags/adc/index.xml" rel="self" type="application/rss+xml"/><item><title>JMonkeyEngine with Joystick</title><link>https://pi4j.com/featured-projects/joystick-game/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/featured-projects/joystick-game/</guid><description>&lt;p&gt;&lt;a href="https://github.com/pavly-gerges" target="_blank" rel="noopener"&gt;&lt;strong&gt;Pavl G.&lt;/strong&gt;&lt;/a&gt; created a Java Gradle library to control a car in a &lt;a href="https://jmonkeyengine.org/" target="_blank" rel="noopener"&gt;JMonkeyEngine&lt;/a&gt; game with an arduino joystick module connected to a Raspberry Pi4 model B, using GPIO digital pins and SPI interfacing through MCP3008 ADC (Analog~Digital Converter).&lt;/p&gt;
&lt;h2 id="requirements"&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Raspberry Pi with arm processor (pi3, pi4, piZero) with a working java8 (preferred).&lt;/li&gt;
&lt;li&gt;Female-to-male jumper wires.&lt;/li&gt;
&lt;li&gt;Breadboard.&lt;/li&gt;
&lt;li&gt;Arduino Joystick module.&lt;/li&gt;
&lt;li&gt;MCP3008 IC (ADC &amp;ndash; other adcs may work too, but we are covering only MCP3008 here).&lt;/li&gt;
&lt;li&gt;Some patience and time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="difference-between-analog-and-digital-signals"&gt;Difference between Analog and Digital signals?&lt;/h2&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/60224159/157847529-3b46c3e9-8d39-428c-91a1-f3018cb9f9e3.png" alt="image"&gt;&lt;/p&gt;</description></item><item><title>AD Converter ADS1115</title><link>https://pi4j.com/examples/components/ads1115/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/examples/components/ads1115/</guid><description>&lt;h3 id="description"&gt;Description&lt;/h3&gt;
&lt;p&gt;The Analog Digital Converter &lt;a href="https://github.com/Pi4J/pi4j-example-components/tree/main/src/main/java/com/pi4j/catalog/components/Ads1115.java" target="_blank" rel="noopener"&gt;Ads1115&lt;/a&gt; is a template class, that you can use in your own Java-project.
The ADS1115 device is a precision, low-power, 16-bit, I2C-compatible, analog-to-digital converter (ADCs). The ADS1115 device incorporates a low-drift voltage reference and an oscillator as well as a programmable gain amplifier (PGA) and
a digital comparator. These features, along with a wide operating supply range, makes the ADS1115 well suited for power- and space-constrained, sensor measurement applications.&lt;/p&gt;</description></item><item><title>Joystick Analog</title><link>https://pi4j.com/examples/components/joystickanalog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/examples/components/joystickanalog/</guid><description>&lt;h3 id="description"&gt;Description&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://github.com/Pi4J/pi4j-example-components/tree/main/src/main/java/com/pi4j/catalog/components/JoystickAnalog.java" target="_blank" rel="noopener"&gt;JoystickAnalog&lt;/a&gt; is a template class, that you can use in your own Java-project.
The template class is created for an analog joystick, for example the KY-023, which consists of two potentiometers, one for the X-axis and one for the Y-axis. But any joystick with two potentiometers will meet the requirements.&lt;/p&gt;
&lt;p&gt;The basic functions of the template class are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;return of a normalized value, optionally between 0 and 1 or between -1 and 1, of the X-axis and the Y-axis&lt;/li&gt;
&lt;li&gt;creation of simple events at a value change of the X-axis or the Y-axis, simple event handlers for button pressed, button depressed, while button is pressed&lt;/li&gt;
&lt;li&gt;calibration of the center position of the joystick (center position 0.5 at a normalized value between 0 and 1, center position 0 at a normalized value between -1 and 1)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="layout"&gt;Layout&lt;/h3&gt;
&lt;p&gt;&lt;img src="https://pi4j.com/assets/examples/components/components/Layout-JoystickAnalog.png" alt="Joystick Layout"&gt;&lt;/p&gt;</description></item><item><title>Potentiometer</title><link>https://pi4j.com/examples/components/potentiometer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/examples/components/potentiometer/</guid><description>&lt;h3 id="description"&gt;Description&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://github.com/Pi4J/pi4j-example-components/tree/main/src/main/java/com/pi4j/catalog/components/Potentiometer.java" target="_blank" rel="noopener"&gt;Potentiometer&lt;/a&gt; is a template class, that you can use in your own Java-project.
The constructor of the class requires an ADS1115 object. In addition, the channel, with which the AD converter evaluates the current position of the sliding contact must be defined. For normalization, the maximum voltage that can drop across the sliding contact must also be specified. Any commercially available potentiometer with three connections (fixed resistor and the slider) can be evaluated with this class.&lt;/p&gt;</description></item></channel></rss>
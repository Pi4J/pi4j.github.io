<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Serial on Pi4J</title><link>https://pi4j.com/tags/serial/</link><description>Recent content in Serial on Pi4J</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://pi4j.com/tags/serial/index.xml" rel="self" type="application/rss+xml"/><item><title>SmartCoop</title><link>https://pi4j.com/featured-projects/smartcoop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/featured-projects/smartcoop/</guid><description>&lt;div class="notices tip" &gt;&lt;p&gt;PROJECT WEBSITE: &lt;a href="https://www.smartcoop.tech" target="_blank" rel="noopener"&gt;smartcoop.tech&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Dave Duncanson&lt;/strong&gt;, an ex Royal Australian Airforce (RAAF) electronics technician and embedded software developer, created the &lt;strong&gt;SmartCoop&lt;/strong&gt;. It&amp;rsquo;s a fully automated Chicken Coop Controller solution which uses a Raspberry Pi and a ESP32-S3 Processor located on a custom designed Surface Mount Designed (SMD) PCB. The goal of this project was to significantly reduce the amount of regular and routine tasks required to keep a small flock (~30) of chickens on a hobby farm located in NSW just outside of Canberra Australia.&lt;/p&gt;</description></item><item><title>PiGpio Provider</title><link>https://pi4j.com/documentation/providers/pigpio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/documentation/providers/pigpio/</guid><description>&lt;p&gt;The current implementation of the PiGpio exposes the GPIO functions available on the Raspberry Pi (see Note Pi5 below).
This implementation is developed/supported by a team separate of Pi4j. Pi4j is a consumer of that PiGpio work.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;Pi5 At the present time the PiGpio implementation does not support the new Pi5 board. 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;- This new Pi5 RP1 chip will require a large development effort. There is no known plan &lt;span style="color:#66d9ef"&gt;for&lt;/span&gt; this develoment. 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Providers in the PiGpio plugin:&lt;/p&gt;</description></item><item><title>Serial (UART/RS232)</title><link>https://pi4j.com/documentation/io-examples/serial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/documentation/io-examples/serial/</guid><description>&lt;div class="notices warning" &gt;&lt;p&gt;As of version 3 of the Pi4J library, the serial methods have been marked as deprecated, and we advise to use the &lt;a href="https://fazecast.github.io/jSerialComm/" target="_blank" rel="noopener"&gt;jSerialComm library&lt;/a&gt;, as discussed in &lt;a href="https://github.com/Pi4J/pi4j/discussions/308" target="_blank" rel="noopener"&gt;#308: Remove serial support from Pi4J?&lt;/a&gt;. The example code below is still applicable, but serial support will be fully removed in later versions of Pi4J.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;
&lt;div class="notices tip" &gt;&lt;p&gt;GITHUB PROJECT: &lt;a href="https://github.com/Pi4J/pi4j-example-components/blob/main/src/main/java/com/pi4j/catalog/applications/SerialGps_App.java" target="_blank" rel="noopener"&gt;https://github.com/Pi4J/pi4j-example-components/blob/main/src/main/java/com/pi4j/catalog/applications/SerialGps_App.java&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="what-is-it"&gt;What is it?&lt;/h2&gt;
&lt;p&gt;Serial communication can be used to transfer data between different boards, devices, etc. Data is transfered bit-by-bit
in a sequence, through a single wire from a transmitter (= TX) to a receiver (= RX). On the receiver side the bits are
combined to bytes.&lt;/p&gt;</description></item></channel></rss>
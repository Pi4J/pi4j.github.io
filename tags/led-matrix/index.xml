<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LED Matrix on Pi4J</title><link>https://pi4j.com/tags/led-matrix/</link><description>Recent content in LED Matrix on Pi4J</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://pi4j.com/tags/led-matrix/index.xml" rel="self" type="application/rss+xml"/><item><title>Component Examples</title><link>https://pi4j.com/examples/components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/examples/components/</guid><description>&lt;p&gt;The FHNW University contributed a full project with example implementations of the following devices.&lt;/p&gt;
&lt;h3 id="current-available-components"&gt;Current available components&lt;/h3&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th style="text-align: left"&gt;Device(s)&lt;/th&gt;
 &lt;th style="text-align: left"&gt;Developed by&lt;/th&gt;
 &lt;th style="text-align: left"&gt;Link&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://pi4j.com/examples/components/simplebutton"&gt;Simple Button&lt;/a&gt;&lt;/td&gt;
 &lt;td style="text-align: left"&gt;Reto Stutz, Mike Schoder&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://github.com/Pi4J/pi4j-example-components/blob/main/src/main/java/com/pi4j/catalog/applications/SimpleButton_App.java" target="_blank" rel="noopener"&gt;Example Devices&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://pi4j.com/examples/components/simpleled"&gt;Simple LED&lt;/a&gt;&lt;/td&gt;
 &lt;td style="text-align: left"&gt;Reto Stutz, Mike Schoder&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://github.com/Pi4J/pi4j-example-components/blob/main/src/main/java/com/pi4j/catalog/applications/SimpleLed_App.java" target="_blank" rel="noopener"&gt;Example Devices&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://pi4j.com/examples/components/ads1115"&gt;AD Converter ADS1115&lt;/a&gt;&lt;/td&gt;
 &lt;td style="text-align: left"&gt;Reto Stutz, Mike Schoder&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://github.com/Pi4J/pi4j-example-components/blob/main/src/main/java/com/pi4j/catalog/applications/Ads1115_App.java" target="_blank" rel="noopener"&gt;Example Devices&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://pi4j.com/examples/components/buzzer"&gt;Buzzer&lt;/a&gt;&lt;/td&gt;
 &lt;td style="text-align: left"&gt;Reto Stutz, Mike Schoder&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://github.com/Pi4J/pi4j-example-components/blob/main/src/main/java/com/pi4j/catalog/applications/Buzzer_App.java" target="_blank" rel="noopener"&gt;Example Devices&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://pi4j.com/examples/components/camera"&gt;Camera&lt;/a&gt;&lt;/td&gt;
 &lt;td style="text-align: left"&gt;Reto Stutz, Mike Schoder&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://github.com/Pi4J/pi4j-example-components/blob/main/src/main/java/com/pi4j/catalog/applications/Camera_App.java" target="_blank" rel="noopener"&gt;Example Devices&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://pi4j.com/examples/components/joystick"&gt;Joystick&lt;/a&gt;&lt;/td&gt;
 &lt;td style="text-align: left"&gt;Reto Stutz, Mike Schoder&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://github.com/Pi4J/pi4j-example-components/blob/main/src/main/java/com/pi4j/catalog/applications/Joystick_App.java" target="_blank" rel="noopener"&gt;Example Devices&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://pi4j.com/examples/components/joystickanalog"&gt;Joystick Analog&lt;/a&gt;&lt;/td&gt;
 &lt;td style="text-align: left"&gt;Reto Stutz, Mike Schoder&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://github.com/Pi4J/pi4j-example-components/blob/main/src/main/java/com/pi4j/catalog/applications/JoystickAnalog_App.java" target="_blank" rel="noopener"&gt;Example Devices&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://pi4j.com/examples/components/lcddisplay"&gt;LCD Display&lt;/a&gt;&lt;/td&gt;
 &lt;td style="text-align: left"&gt;Reto Stutz, Mike Schoder&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://github.com/Pi4J/pi4j-example-components/blob/main/src/main/java/com/pi4j/catalog/applications/LcdDisplay_App.java" target="_blank" rel="noopener"&gt;Example Devices&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://pi4j.com/examples/components/ledbutton"&gt;LED Button&lt;/a&gt;&lt;/td&gt;
 &lt;td style="text-align: left"&gt;Reto Stutz, Mike Schoder&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://github.com/Pi4J/pi4j-example-components/blob/main/src/main/java/com/pi4j/catalog/applications/LedButton_App.java" target="_blank" rel="noopener"&gt;Example Devices&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://pi4j.com/examples/components/ledmatrix"&gt;LED Matrix&lt;/a&gt;&lt;/td&gt;
 &lt;td style="text-align: left"&gt;Reto Stutz, Mike Schoder&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://github.com/Pi4J/pi4j-example-components/blob/main/src/main/java/com/pi4j/catalog/applications/LedMatrix_App.java" target="_blank" rel="noopener"&gt;Example Devices&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://pi4j.com/examples/components/ledstrip"&gt;LED Strip&lt;/a&gt;&lt;/td&gt;
 &lt;td style="text-align: left"&gt;Reto Stutz, Mike Schoder&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://github.com/Pi4J/pi4j-example-components/blob/main/src/main/java/com/pi4j/catalog/applications/LedStrip_App.java" target="_blank" rel="noopener"&gt;Example Devices&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://pi4j.com/examples/components/potentiometer"&gt;Potentiometer&lt;/a&gt;&lt;/td&gt;
 &lt;td style="text-align: left"&gt;Reto Stutz, Mike Schoder&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://github.com/Pi4J/pi4j-example-components/blob/main/src/main/java/com/pi4j/catalog/applications/Potentiometer_App.java" target="_blank" rel="noopener"&gt;Example Devices&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://pi4j.com/examples/components/servo"&gt;Servo Motor&lt;/a&gt;&lt;/td&gt;
 &lt;td style="text-align: left"&gt;Reto Stutz, Mike Schoder&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://github.com/Pi4J/pi4j-example-components/blob/main/src/main/java/com/pi4j/catalog/applications/Servo_App.java" target="_blank" rel="noopener"&gt;Example Devices&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="simple-implementation"&gt;Simple Implementation&lt;/h3&gt;
&lt;p&gt;For a Simple Implementation, the recommendation is to use the &lt;a href="https://github.com/Pi4J/pi4j-example-components/tree/main/src/main/java/com/pi4j/catalog/Launcher.java" target="_blank" rel="noopener"&gt;Launcher Class&lt;/a&gt;.
With this, a simple application can be started.&lt;/p&gt;</description></item><item><title>8x8 LED Matrix</title><link>https://pi4j.com/examples/jbang/jbang_pi4j_spi_led_matrix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/examples/jbang/jbang_pi4j_spi_led_matrix/</guid><description>&lt;h2 id="controlling-a-8x8-led-matrix-with-max7219-via-spi"&gt;Controlling a 8x8 LED Matrix with MAX7219 via SPI&lt;/h2&gt;

&lt;div class="notices tip" &gt;&lt;p&gt;GITHUB PROJECT: &lt;a href="https://github.com/Pi4J/pi4j-jbang/blob/main/Pi4JLedMatrixSpi.java" target="_blank" rel="noopener"&gt;github.com/Pi4J/pi4j-jbang &amp;gt; Pi4JLedMatrixSpi.java&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;This example is explained in the following video:&lt;/p&gt;
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;"&gt;
 &lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/BXOqXuh50KI?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"&gt;&lt;/iframe&gt;
 &lt;/div&gt;

&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;

&lt;div class="notices warning" &gt;&lt;p&gt;Before proceeding with this example, make sure that you have a Raspberry Pi prepared to execute Java code with JBang as &lt;a href="https://pi4j.com/examples/jbang/" target="_blank" rel="noopener"&gt;explained here&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>LED Matrix</title><link>https://pi4j.com/examples/components/ledmatrix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/examples/components/ledmatrix/</guid><description>&lt;div class="notices note" &gt;&lt;p&gt;Although this example is still valid, an easier approach for the control of an array of LEDs can be achieved with the PixelBlaze Output Expander as described &lt;a href="https://pi4j.com/examples/jbang/pixelblaze_output_expander/" target="_blank" rel="noopener"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id="description"&gt;Description&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://github.com/Pi4J/pi4j-example-components/tree/main/src/main/java/com/pi4j//catalog/components/LedMatrix.java" target="_blank" rel="noopener"&gt;LedMatrix&lt;/a&gt; is a template class, that you can use in your own Java-project.
It is an extension of the class &lt;a href="https://pi4j.com/examples/components/ledstrip/" target="_blank" rel="noopener"&gt;LEDStrip&lt;/a&gt;. An LED matrix can be built from one LED strip. To do this, separate the LED strip at the desired point and place the individual strips under each other or next to each other. The individual ends can then be connected to each other with a wire.
The constructor can be passed either as a rectangular matrix or a user-defined matrix with different numbers of LEDs in the individual strips. A software compatible LED strip is for example the WS28xx-chip set LED Strip.&lt;/p&gt;</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CrowPi on Pi4J</title><link>https://pi4j.com/tags/crowpi/</link><description>Recent content in CrowPi on Pi4J</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 09 Oct 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://pi4j.com/tags/crowpi/index.xml" rel="self" type="application/rss+xml"/><item><title>Develop with Intellij IDEA</title><link>https://pi4j.com/examples/crowpi/develop-crowpi-with-intellij/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/examples/crowpi/develop-crowpi-with-intellij/</guid><description>&lt;p&gt;The CrowPi example project contains settings to make it easy to develop on a PC with IntelliJ IDEA and execute the application on the CrowPi. The articles, instructions and pictures are created accordingly.
IntelliJ IDEA is from available Jetbrains in different versions. The community version has enough functionality for development
with the CrowPi and is available for Windows, MacOS and Linux, but NOT for Raspberry Pi. The
&lt;a href="https://www.jetbrains.com/idea/download/" target="_blank" rel="noopener"&gt;download can be found here&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>CrowPi examples</title><link>https://pi4j.com/examples/crowpi/crowpi-examples/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/examples/crowpi/crowpi-examples/</guid><description>&lt;div class="notices tip" &gt;&lt;p&gt;GITHUB PROJECT: &lt;a href="https://github.com/Pi4J/pi4j-example-crowpi" target="_blank" rel="noopener"&gt;https://github.com/Pi4J/pi4j-example-crowpi&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;The CrowPi example code contains examples for the following components. The links in this table will bring you to the German documentation written by the students who created these examples.&lt;/p&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th style="text-align: left"&gt;Component&lt;/th&gt;
 &lt;th style="text-align: left"&gt;Link&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;7-Segment Display&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/seven-segment/" target="_blank" rel="noopener"&gt;seven-segment&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;Button&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/button/" target="_blank" rel="noopener"&gt;button&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;Button Matrix&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/button-matrix/" target="_blank" rel="noopener"&gt;button-matrix&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;Buzzer&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/buzzer/" target="_blank" rel="noopener"&gt;buzzer&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;Infrared Receiver&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/ir-receiver/" target="_blank" rel="noopener"&gt;ir-receiver&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;LCD Display&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/lcd-display/" target="_blank" rel="noopener"&gt;lcd-display&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;LED Matrix&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/led-matrix/" target="_blank" rel="noopener"&gt;led-matrix&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;Light sensor&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/light-sensor/" target="_blank" rel="noopener"&gt;light-sensor&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;PIR Motion Sensor&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/pir-motion-sensor/" target="_blank" rel="noopener"&gt;pir-motion-sensor&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;Relais&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/relay/" target="_blank" rel="noopener"&gt;relay&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;RFID&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/rfid/" target="_blank" rel="noopener"&gt;rfid&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;Step motor&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/step-motor/" target="_blank" rel="noopener"&gt;step-motor&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;Servomotor&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/servo-motor/" target="_blank" rel="noopener"&gt;servo-motor&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;Sound Sensor&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/sound-sensor/" target="_blank" rel="noopener"&gt;sound-sensor&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;Temperature and humidity sensor&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/humi-temp-sens/" target="_blank" rel="noopener"&gt;humi-temp-sens&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;Tilt Sensor&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/tilt-sensor/" target="_blank" rel="noopener"&gt;tilt-sensor&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;Touch Sensor&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/touch-sensor/" target="_blank" rel="noopener"&gt;touch-sensor&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;Ultrasonic distance sensor&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/ultrasonic-sensor/" target="_blank" rel="noopener"&gt;ultrasonic-sensor&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: left"&gt;Vibration motor&lt;/td&gt;
 &lt;td style="text-align: left"&gt;&lt;a href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/vibration-motor/" target="_blank" rel="noopener"&gt;vibration-motor&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;</description></item><item><title>Electronics with CrowPi</title><link>https://pi4j.com/examples/crowpi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/examples/crowpi/</guid><description>&lt;p&gt;The &lt;a href="https://www.elecrow.com/crowpi.html" target="_blank" rel="noopener"&gt;CrowPi is an electronics starter kit in a laptop-housing&lt;/a&gt;.
Of course, you can get any electronics starter kit for this purpose or buy separate components. That&amp;rsquo;s the fun of
electronics: components are inexpensive and easy to find on ebay or one of the many web shops.&lt;/p&gt;
&lt;p&gt;


&lt;div class="gallery caption-position-bottom caption-effect-slide hover-effect-zoom hover-transition" itemscope itemtype="http://schema.org/ImageGallery"&gt;
	 

&lt;link rel="stylesheet" href="https://pi4j.com/css/hugo-easy-gallery.css" /&gt;
&lt;div class="box fancy-figure caption-position-center caption-effect-fade" &gt;
 &lt;figure itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject"&gt;
 &lt;div class="img" style="background-image: url('/assets/examples/crowpi/crowpi1.jpg');"&gt;
 &lt;img itemprop="thumbnail" src="https://pi4j.com/assets/examples/crowpi/crowpi1.jpg" alt="CrowPi 1"/&gt;
 &lt;/div&gt;
 &lt;a href="https://pi4j.com/assets/examples/crowpi/crowpi1.jpg" itemprop="contentUrl"&gt;&lt;/a&gt;
 &lt;figcaption&gt;
 &lt;p&gt;CrowPi 1&lt;/p&gt;
 &lt;/figcaption&gt;
 &lt;/figure&gt;
&lt;/div&gt;



&lt;div class="box fancy-figure caption-position-center caption-effect-fade" &gt;
 &lt;figure itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject"&gt;
 &lt;div class="img" style="background-image: url('/assets/examples/crowpi/crowpi2.jpg');"&gt;
 &lt;img itemprop="thumbnail" src="https://pi4j.com/assets/examples/crowpi/crowpi2.jpg" alt="CrowPi 2"/&gt;
 &lt;/div&gt;
 &lt;a href="https://pi4j.com/assets/examples/crowpi/crowpi2.jpg" itemprop="contentUrl"&gt;&lt;/a&gt;
 &lt;figcaption&gt;
 &lt;p&gt;CrowPi 2&lt;/p&gt;
 &lt;/figcaption&gt;
 &lt;/figure&gt;
&lt;/div&gt;



&lt;div class="box fancy-figure caption-position-center caption-effect-fade" &gt;
 &lt;figure itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject"&gt;
 &lt;div class="img" style="background-image: url('/assets/examples/crowpi/electronics-starter-kit.jpg');"&gt;
 &lt;img itemprop="thumbnail" src="https://pi4j.com/assets/examples/crowpi/electronics-starter-kit.jpg" alt="Example electronics starter kit"/&gt;
 &lt;/div&gt;
 &lt;a href="https://pi4j.com/assets/examples/crowpi/electronics-starter-kit.jpg" itemprop="contentUrl"&gt;&lt;/a&gt;
 &lt;figcaption&gt;
 &lt;p&gt;Example electronics starter kit&lt;/p&gt;</description></item><item><title>Pulse Width Modulation (PWM)</title><link>https://pi4j.com/documentation/io-examples/pwm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/documentation/io-examples/pwm/</guid><description>&lt;h2 id="what-is-it"&gt;What is it?&lt;/h2&gt;
&lt;p&gt;The abbreviation PWM stands for &amp;ldquo;Pulse Width Modulation&amp;rdquo; and is also often referred
to in German as pulse width modulation or pulse duration modulation. This technology
is used, among other things, to control servomotors and is also used, for example,
for the fans of a regular computer.&lt;/p&gt;
&lt;p&gt;With PWM, it is possible to control a component such as a motor no longer purely
binary, i.e. off (0% power) or on (100% power), but to control them almost at will.
The functionality of PWM works in such a way that the component is switched off and
on again and again within a certain period of time.&lt;/p&gt;</description></item><item><title>2025 Devoxx Talk FFM API</title><link>https://pi4j.com/video/20251009-devoxx-ffmapi/</link><pubDate>Thu, 09 Oct 2025 00:00:00 +0000</pubDate><guid>https://pi4j.com/video/20251009-devoxx-ffmapi/</guid><description>&lt;h2 id="the-wait-is-over-foreign-function--memory-ffm-api-brings-modern-java-to-the-raspberry-pi"&gt;The Wait is Over: Foreign Function &amp;amp; Memory FFM API brings modern Java to the Raspberry Pi&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;20251009 - Recording of the talk at Devoxx Belgium by Frank Delporte&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;All the links of the presentation are available &lt;a href="https://webtechie.be/post/2025-10-08-devoxx-talk-ffmapi-on-raspberrypi/" target="_blank" rel="noopener"&gt;on this blog post&lt;/a&gt;.&lt;/p&gt;
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;"&gt;
 &lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/2BcWWWkb8ac?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"&gt;&lt;/iframe&gt;
 &lt;/div&gt;

&lt;p&gt;Since 2012, Pi4J has enabled Java to control electronic components connected to the Raspberry Pi&amp;rsquo;s GPIO pins. However, both Java and the Raspberry Pi have evolved significantly since then. Supporting new hardware has been a challenge, requiring multiple implementations in the Pi4J library with complex code based on the Java Native Interface (JNI) and Java Native Access (JNA).&lt;/p&gt;</description></item><item><title>2025 Live Coding: Vaadin</title><link>https://pi4j.com/video/20250924-live-coding-vaadin/</link><pubDate>Wed, 24 Sep 2025 00:00:00 +0000</pubDate><guid>https://pi4j.com/video/20250924-live-coding-vaadin/</guid><description>&lt;h2 id="live-stream-coding"&gt;Live Stream Coding&lt;/h2&gt;
&lt;h3 id="improving-the-vaadinspringpi4j-demo-application-with-matti-tahvonen"&gt;Improving the Vaadin+Spring+Pi4J demo application with Matti Tahvonen&lt;/h3&gt;
&lt;p&gt;2025-09-24, by Frank Delporte&lt;/p&gt;
&lt;p&gt;During a live stream coding session, &lt;a href="https://www.linkedin.com/in/mattitahvonen/" target="_blank" rel="noopener"&gt;Matti Tahvonen&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/frankdelporte/" target="_blank" rel="noopener"&gt;Frank Delporte&lt;/a&gt; updated an existing Vaadin+Spring+Pi4J demo application to use the latest version of the libraries and Java 25. It&amp;rsquo;s a demo application created a few years ago to be used during presentations at conferences. Of course, everything evolves, so a big update and refactoring was needed.&lt;/p&gt;
&lt;p&gt;(Sorry for the hiccups in the first minutes, the network connection dropped a few times&amp;hellip;)&lt;/p&gt;</description></item></channel></rss>